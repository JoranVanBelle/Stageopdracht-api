# Eventhub
version: '3.7'
networks:
  redpanda_network:
    driver: bridge
volumes:
  redpanda: null
  internship_pgdb:
  internship_pgadmin:
services:

  api:
    container_name: api
    build:
      dockerfile: Dockerfile
    image: api:latest
    restart: always
    ports: 
      - 1083:1083
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - db
      - redpanda

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v22.3.11
    restart: always
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr localhost:8082
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 9644:9644
      - 29092:29092
    volumes:
      - redpanda:/var/lib/redpanda/data
    networks:
      - redpanda_network

  console:
    image: docker.redpanda.com/redpandadata/console:v2.2.0
    entrypoint: /bin/sh
    restart: always
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
    ports:
      - 8080:8080
    networks:
      - redpanda_network
    depends_on:
      - redpanda

  owl-shop:
    image: quay.io/cloudhut/owl-shop:latest
    networks:
      - redpanda_network
    restart: always
    environment:
      - SHOP_KAFKA_BROKERS=redpanda:29092
      - SHOP_KAFKA_TOPICREPLICATIONFACTOR=1
      - SHOP_TRAFFIC_INTERVAL_RATE=1
      - SHOP_TRAFFIC_INTERVAL_DURATION=0.1s
    depends_on:
      - redpanda

  connect:
    image: docker.redpanda.com/redpandadata/connectors:1.0.0-dev-bc9a905
    hostname: connect
    container_name: internship_connect
    networks:
      - redpanda_network
    restart: always
    depends_on:
      - redpanda
    ports:
      - "8083:8083"
    environment:
      CONNECT_CONFIGURATION: |
          key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
          value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
          group.id=connectors-cluster
          offset.storage.topic=_internal_connectors_offsets
          config.storage.topic=_internal_connectors_configs
          status.storage.topic=_internal_connectors_status
          config.storage.replication.factor=-1
          offset.storage.replication.factor=-1
          status.storage.replication.factor=-1
          offset.flush.interval.ms=1000
          producer.linger.ms=50
          producer.batch.size=131072
      CONNECT_BOOTSTRAP_SERVERS: redpanda:29092
      CONNECT_GC_LOG_ENABLED: "false"
      CONNECT_HEAP_OPTS: -Xms512M -Xmx512M
      CONNECT_LOG_LEVEL: info

  db:
    image: postgres
    container_name: internship_pgdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: Stageopdracht
      POSTGRES_USER: user
      POSTGRES_PASSWORD: admin
    volumes:
      - internship_pgdb:/var/lib/postgresql/data
      - ./src/main/populateDatabase.sql:/docker-entrypoint-initdb.d/populateDatabase.sql
  pgadmin:
    image: dpage/pgadmin4
    container_name: internship_pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: joran.vanbelle2@student.hogent.be
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - internship_pgadmin:/var/lib/pgadmin
